@page "/test"
@using System.Security.Claims
@using M133BlazorServerApp.Data
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using Microsoft.AspNetCore.Authorization

@inject ProtectedSessionStorage ProtectedSessionStore
@attribute [Authorize]
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime


<AuthorizeView>
    <Authorized>
        <style>

            .gameContainer {
                --w1: 300px;
                --n: 20;
                --w2: 200px;
                --m: 10;
                --w3: 100px;
                --p: 0;
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(clamp(clamp(clamp( 100%/(var(--n) + 1) + 0.1%, (var(--w1) - 100vw)*1000, 100%/(var(--m) + 1) + 0.1%), (var(--w2) - 100vw)*1000, 100%/(var(--p) + 1) + 0.1%), (var(--w3) - 100vw)*1000, 100%), 1fr));
                width: 100%;
                height: 100%;
                gap: 10px;
                padding: 10px;
            }
            .el{
                height:100%;
                width:100%;
            }

            .championBoxContainer {
                border-radius: 5px;
            }

            /*  .gameGrid {
                        }

                        .championBoxContainer {
                            -webkit-perspective: 1000;
                            -moz-perspective: 1000;
                            -o-perspective: 1000;
                            perspective: 1000;
                            margin: 8px;
                        }

            */


            article.content.px-4 {
                background-image: url(../images/gras1.jpeg);
                background-size: 100%;
            }
        </style>
        <div class="gameContainer">
            @{
                string rootpath = System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), "wwwroot\\images\\icons");
                DirectoryInfo d = new DirectoryInfo(rootpath);



                foreach (var file in d.GetFiles("*.png"))
                {

                    var src = "images\\icons\\" + file.Name;

                    var output = file.Name.Replace(".png", "");

                    //<div id="@output" class="championBoxContainer" @onclick='() => FlipImage(output)'>
                        <img class="el" src="@src" />
                    //</div>


                }
            }
         
        </div>
    </Authorized>
    <NotAuthorized>
        Guessing Game only for logged in users
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task FlipImage(string id)
    {
        await JsRuntime.InvokeVoidAsync("flipImage", id);
    }
}