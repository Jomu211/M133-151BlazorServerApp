// <auto-generated />
using System;
using M133BlazorServerApp.M151Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace M133BlazorServerApp.Migrations
{
    [DbContext(typeof(M151DbContext))]
    partial class M151DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("M133BlazorServerApp.M151Data.GameChampion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ChosenChampion")
                        .HasColumnType("bit");

                    b.Property<string>("Geschlecht")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kampfart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameChampions");
                });

            modelBuilder.Entity("M133BlazorServerApp.M151Data.GameUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameUsers");
                });

            modelBuilder.Entity("M133BlazorServerApp.M151Data.Head", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Anderes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameChampionId")
                        .HasColumnType("int");

                    b.Property<string>("Haaresfarbe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kopfbedeckung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameChampionId")
                        .IsUnique()
                        .HasFilter("[GameChampionId] IS NOT NULL");

                    b.ToTable("Head");
                });

            modelBuilder.Entity("M133BlazorServerApp.M151Data.Head", b =>
                {
                    b.HasOne("M133BlazorServerApp.M151Data.GameChampion", "GameChampion")
                        .WithOne("Head")
                        .HasForeignKey("M133BlazorServerApp.M151Data.Head", "GameChampionId");

                    b.Navigation("GameChampion");
                });

            modelBuilder.Entity("M133BlazorServerApp.M151Data.GameChampion", b =>
                {
                    b.Navigation("Head")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
